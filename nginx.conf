
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    log_format custom_server_log '$remote_addr - $remote_user [$time_local] '
                                '"$request" $status $body_bytes_sent '
                                '$request_length "$http_referer" '
                                '"$http_user_agent"';
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    
    server {
    
        listen 80;
        listen [::]:80;

        server_name localhost;


        # Use it for this server â€” output to the default access log location
        access_log /var/log/nginx/access.log custom_server_log;

        # Serve index.html for root path
        location / {
            root /usr/share/nginx/html/;   # change this to the directory containing index.html
            index index.html;
        }

        # /dump endpoint that reads and discards all request data
        # location /dump { 
        #     # Allow client to send request body of any size 
        #     client_max_body_size 0; 
        #     # Disable proxy buffering if this is a proxy scenario # 
        #     proxy_buffering off;

        #     # Return a 204 No Content response, indicating success without a response body 
        #     root /usr/share/nginx/html/;
        #     index 1kb.txt
        # }

        location /dump {
            
            client_max_body_size 0;
            proxy_buffering off;

            root /usr/share/nginx/html;
            try_files /1kb.txt =404;

        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
